<h2 id='request-bearer-token'>Request Bearer Token</h2>
<div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">--location</span> <span class="nt">--request</span> POST <span class="s1">'https://your_domain/oauth/token'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'content_type: application/x-www-form-urlencoded'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'resource_ID: {{resource_ID}}'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'client_ID: {{client_ID}}'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'client_secret: {{client_secret}}'</span> <span class="se">\</span>
<span class="nt">--data-raw</span> <span class="s1">''</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">var</span> <span class="nx">myHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">();</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">content_type</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">application/x-www-form-urlencoded</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">client_ID</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">{{client_ID}}</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">resource_ID</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">{{resource_ID}}</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">client_secret</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">{{client_secret}}</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">raw</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">requestOptions</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">myHeaders</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">raw</span><span class="p">,</span>
  <span class="na">redirect</span><span class="p">:</span> <span class="dl">'</span><span class="s1">follow</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">https://your_domain/oauth/token</span><span class="dl">"</span><span class="p">,</span> <span class="nx">requestOptions</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">text</span><span class="p">())</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">));</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="nc">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">OkHttpClient</span><span class="o">().</span><span class="na">newBuilder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>
<span class="nc">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/x-www-form-urlencoded"</span><span class="o">);</span>
<span class="nc">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="nc">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
<span class="nc">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://your_domain/oauth/token"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="s">"POST"</span><span class="o">,</span> <span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"content_type"</span><span class="o">,</span> <span class="s">"application/x-www-form-urlencoded"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"client_ID"</span><span class="o">,</span> <span class="s">"{{client_ID}}"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"resource_ID"</span><span class="o">,</span> <span class="s">"{{resource_ID}}"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"client_secret"</span><span class="o">,</span> <span class="s">"{{client_secret}}"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>
<span class="nc">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre></div><div class="highlight"><pre class="highlight swift tab-swift"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="cp">#if canImport(FoundationNetworking)</span>
<span class="kd">import</span> <span class="kt">FoundationNetworking</span>
<span class="cp">#endif</span>

<span class="k">var</span> <span class="nv">semaphore</span> <span class="o">=</span> <span class="kt">DispatchSemaphore</span> <span class="p">(</span><span class="nv">value</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>

<span class="k">var</span> <span class="nv">request</span> <span class="o">=</span> <span class="kt">URLRequest</span><span class="p">(</span><span class="nv">url</span><span class="p">:</span> <span class="kt">URL</span><span class="p">(</span><span class="nv">string</span><span class="p">:</span> <span class="s">"https://your_domain/oauth/token"</span><span class="p">)</span><span class="o">!</span><span class="p">,</span><span class="nv">timeoutInterval</span><span class="p">:</span> <span class="kt">Double</span><span class="o">.</span><span class="n">infinity</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"application/x-www-form-urlencoded"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"content_type"</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"{{resource_ID}}"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"resource_ID"</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"{{client_ID}}"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"client_ID"</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"{{client_secret}}"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"client_secret"</span><span class="p">)</span>

<span class="n">request</span><span class="o">.</span><span class="n">httpMethod</span> <span class="o">=</span> <span class="s">"POST"</span>

<span class="k">let</span> <span class="nv">task</span> <span class="o">=</span> <span class="kt">URLSession</span><span class="o">.</span><span class="n">shared</span><span class="o">.</span><span class="nf">dataTask</span><span class="p">(</span><span class="nv">with</span><span class="p">:</span> <span class="n">request</span><span class="p">)</span> <span class="p">{</span> <span class="n">data</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">error</span> <span class="k">in</span> 
  <span class="k">guard</span> <span class="k">let</span> <span class="nv">data</span> <span class="o">=</span> <span class="n">data</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nf">print</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="nv">describing</span><span class="p">:</span> <span class="n">error</span><span class="p">))</span>
    <span class="n">semaphore</span><span class="o">.</span><span class="nf">signal</span><span class="p">()</span>
    <span class="k">return</span>
  <span class="p">}</span>
  <span class="nf">print</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="nv">data</span><span class="p">:</span> <span class="n">data</span><span class="p">,</span> <span class="nv">encoding</span><span class="p">:</span> <span class="o">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span><span class="p">)</span>
  <span class="n">semaphore</span><span class="o">.</span><span class="nf">signal</span><span class="p">()</span>
<span class="p">}</span>

<span class="n">task</span><span class="o">.</span><span class="nf">resume</span><span class="p">()</span>
<span class="n">semaphore</span><span class="o">.</span><span class="nf">wait</span><span class="p">()</span>

</code></pre></div>

<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>

<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"token_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Bearer"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"expires_in"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4200"</span><span class="p">,</span><span class="w">

  </span><span class="nl">"access_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"{{bearer_token}}"</span><span class="p">,</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>

<p>Request a bearer token to establish authorization to use our API. Enter your credentials in the header
of your request, as shown below.</p>
<h3 id='http-request'>HTTP Request</h3>
<p><code>POST /oauth2/token</code></p>
<h3 id='header-parameters'>Header Parameters</h3>
<!-- Is it assumed header parameters are mandatory, or need to say explicity? -->

<!-- Maybe explain M/O since it is abbreviated -->

<!-- Min and max values are really only applicable to non-variable fields. How handle? -->

<table><thead>
<tr>
<th>Param</th>
<th>Value</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>content_type</td>
<td>application/x-www-<br>form-urlencoded</td>
<td>string</td>
<td>The format the body of the request is being sent as.</td>
</tr>
<tr>
<td>resource_ID</td>
<td><code>{{resource_ID}}</code></td>
<td>string</td>
<td>The fully qualified ID of the resource your application is requesting &quot;access to&quot;.</td>
</tr>
<tr>
<td>client_ID</td>
<td><code>{{client_ID}}</code></td>
<td>string</td>
<td>The public identifier for your application represented as a 32-character hex string.</td>
</tr>
<tr>
<td>client_secret</td>
<td><code>{{client_secret}}</code></td>
<td>string</td>
<td>The secret (or password) known only to the application and the authorization server.</td>
</tr>
</tbody></table>
<h3 id='request-body'>Request Body</h3>
<p>Since the content_type for this request is <strong>application/x-www-form-urlencoded</strong>, there is no JSON example. Below is a request example:</p>

<p><code>content_type=application/x-www-form-urlencoded&amp;resource_ID={{resource_ID}}&amp;client_ID={{client_ID}}&amp;client_secret={{client_secret}}</code></p>

<table><thead>
<tr>
<th>Param</th>
<th>Value</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>resource_ID</td>
<td><code>{{resource_ID}}</code></td>
<td>string</td>
<td>The fully qualified ID of the resource your application is requesting &quot;access to&quot;.</td>
</tr>
<tr>
<td>client_ID</td>
<td><code>{{client_ID}}</code></td>
<td>string</td>
<td>The public identifier for your application represented as a 32-character hex string.</td>
</tr>
<tr>
<td>client_secret</td>
<td><code>{{client_secret}}</code></td>
<td>string</td>
<td>The secret (or password) known only to the application and the authorization server.</td>
</tr>
</tbody></table>

<aside class="success">
A successful request returns a 200 OK Status with the body returning the bearer token. OAuth2 is now 
established.
</aside>
<h3 id='response'>Response</h3>
<table><thead>
<tr>
<th>Param</th>
<th>Type</th>
<th>O/M</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>token_type</td>
<td>string</td>
<td>Mandatory</td>
<td>The type of token (i.e. Bearer).</td>
</tr>
<tr>
<td>expires_in</td>
<td>datetime</td>
<td>Mandatory</td>
<td>The date and time the access token expires.</td>
</tr>
<tr>
<td>resource_ID</td>
<td>string</td>
<td>Mandatory</td>
<td>The fully qualified ID of the resource your application is requesting &quot;access to&quot;.</td>
</tr>
<tr>
<td>access_token</td>
<td>string</td>
<td>Mandatory</td>
<td>(AKA &quot;Bearer&quot;) token that informs the API that you are authorized to access the API and perform specific actions specified by the scope that was granted during authorization.</td>
</tr>
</tbody></table>

<p>Now that OAuth2 is established, use the bearer token to retrieve a session token. 
Please note that the bearer token expires, as indicated by the <code>expires_in</code> value returned in the response.</p>

<p>Use a tool such as <a href="https://jwt.io/">jwt.io</a> to view the content of the bearer token. This approach is handy for troubleshooting 
if you need to verify permission roles granted for the client it is provided against.</p>

<h2 id='make-api-calls'>Make API Calls</h2>
<blockquote>
<p>Your basic request should look like the following:</p>
</blockquote>

<div class="highlight"><pre class="highlight shell tab-shell"><code>curl POST <span class="s1">'_apiEndpoint_'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'content_type: application/json'</span> <span class="se">\</span>
<span class="nt">--header</span> <span class="s1">'Authorization: {{bearer_token}}'</span> <span class="se">\</span>
<span class="nt">--data-raw</span> <span class="s1">'{
    "_jsonObjectkey_": "_keyValue_"
}'</span>
</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">var</span> <span class="nx">myHeaders</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">();</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">content_type</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">application/json</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">myHeaders</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="dl">"</span><span class="s2">Authorization</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">{{bearer_token}}</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">raw</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span><span class="dl">"</span><span class="s2">_jsonObjectkey_</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">{{_jsonObjectkey_}}</span><span class="dl">"</span><span class="p">});</span>

<span class="kd">var</span> <span class="nx">requestOptions</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">myHeaders</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">raw</span><span class="p">,</span>
  <span class="na">redirect</span><span class="p">:</span> <span class="dl">'</span><span class="s1">follow</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">"</span><span class="s2">_apiEndpoint_</span><span class="dl">"</span><span class="p">,</span> <span class="nx">requestOptions</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">text</span><span class="p">())</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">));</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="nc">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">OkHttpClient</span><span class="o">().</span><span class="na">newBuilder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>
<span class="nc">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="nc">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="nc">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\n    \"_jsonObjectkey_\": \"{{_jsonObjectkey_}}\"\n}"</span><span class="o">);</span>
<span class="nc">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"_apiEndpoint_"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="s">"POST"</span><span class="o">,</span> <span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"content_type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"{{bearer_token}}"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>
<span class="nc">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre></div><div class="highlight"><pre class="highlight swift tab-swift"><code><span class="kd">import</span> <span class="kt">Foundation</span>
<span class="cp">#if canImport(FoundationNetworking)</span>
<span class="kd">import</span> <span class="kt">FoundationNetworking</span>
<span class="cp">#endif</span>

<span class="k">var</span> <span class="nv">semaphore</span> <span class="o">=</span> <span class="kt">DispatchSemaphore</span> <span class="p">(</span><span class="nv">value</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>

<span class="k">let</span> <span class="nv">parameters</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">_jsonObjectkey_</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">{{_jsonObjectkey_}}</span><span class="se">\"\n</span><span class="s">}"</span>
<span class="k">let</span> <span class="nv">postData</span> <span class="o">=</span> <span class="n">parameters</span><span class="o">.</span><span class="nf">data</span><span class="p">(</span><span class="nv">using</span><span class="p">:</span> <span class="o">.</span><span class="n">utf8</span><span class="p">)</span>

<span class="k">var</span> <span class="nv">request</span> <span class="o">=</span> <span class="kt">URLRequest</span><span class="p">(</span><span class="nv">url</span><span class="p">:</span> <span class="kt">URL</span><span class="p">(</span><span class="nv">string</span><span class="p">:</span> <span class="s">"_apiEndpoint_"</span><span class="p">)</span><span class="o">!</span><span class="p">,</span><span class="nv">timeoutInterval</span><span class="p">:</span> <span class="kt">Double</span><span class="o">.</span><span class="n">infinity</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"application/json"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"content_type"</span><span class="p">)</span>
<span class="n">request</span><span class="o">.</span><span class="nf">addValue</span><span class="p">(</span><span class="s">"{{bearer_token}}"</span><span class="p">,</span> <span class="nv">forHTTPHeaderField</span><span class="p">:</span> <span class="s">"Authorization"</span><span class="p">)</span>

<span class="n">request</span><span class="o">.</span><span class="n">httpMethod</span> <span class="o">=</span> <span class="s">"POST"</span>
<span class="n">request</span><span class="o">.</span><span class="n">httpBody</span> <span class="o">=</span> <span class="n">postData</span>

<span class="k">let</span> <span class="nv">task</span> <span class="o">=</span> <span class="kt">URLSession</span><span class="o">.</span><span class="n">shared</span><span class="o">.</span><span class="nf">dataTask</span><span class="p">(</span><span class="nv">with</span><span class="p">:</span> <span class="n">request</span><span class="p">)</span> <span class="p">{</span> <span class="n">data</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">error</span> <span class="k">in</span> 
  <span class="k">guard</span> <span class="k">let</span> <span class="nv">data</span> <span class="o">=</span> <span class="n">data</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nf">print</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="nv">describing</span><span class="p">:</span> <span class="n">error</span><span class="p">))</span>
    <span class="n">semaphore</span><span class="o">.</span><span class="nf">signal</span><span class="p">()</span>
    <span class="k">return</span>
  <span class="p">}</span>
  <span class="nf">print</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="nv">data</span><span class="p">:</span> <span class="n">data</span><span class="p">,</span> <span class="nv">encoding</span><span class="p">:</span> <span class="o">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span><span class="p">)</span>
  <span class="n">semaphore</span><span class="o">.</span><span class="nf">signal</span><span class="p">()</span>
<span class="p">}</span>

<span class="n">task</span><span class="o">.</span><span class="nf">resume</span><span class="p">()</span>
<span class="n">semaphore</span><span class="o">.</span><span class="nf">wait</span><span class="p">()</span>

</code></pre></div>

<p>Prior to making your first API call, add the bearer token retrieved by a <strong>Request Bearer Token</strong> request in the header, as shown below.
Include it in all your requests for authorization.</p>

<!-- Our web-hosted resources are protected through 
the Microsoft identity platform that implements OAuth 2.0 authorization protocol. 
OAuth 2.0 is a method through which your third-party app can access web-hosted 
resources on behalf of your users. -->

<h3 id='header-parameters'>Header Parameters</h3>

<!-- The Authorization is required, consider a new column for mandatory elements-->

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>content_type</td>
<td>application/json</td>
<td>string</td>
<td>The format the body of the request is being sent as.</td>
</tr>
<tr>
<td>Authorization</td>
<td><code>{{bearer_token}}</code></td>
<td>string</td>
<td>Credential used by your application to access our API.</td>
</tr>
</tbody></table>

<aside class="notice">
You must replace <code>{{bearer_token}}</code> in the header of all your requests with the access token returned after sending the Getbearer_token request.
</aside>

<p>Continue onward to make your first <strong>Enroll</strong> request.</p>

```shell
curl --location --request POST 'https://www.smartinventory/api/area/requeststate' \
--header 'content_type: application/json' \
--header 'Authorization: {{bearer_token}}' \
--data-raw '{ "device_list" : [], 
  "transaction_ID" : "1", 
  "session_token" : "{{session_token}}"
} '
```

```javascript
var myHeaders = new Headers();
myHeaders.append("content_type", "application/json");
myHeaders.append("Authorization", "{{bearer_token}}");

var raw = JSON.stringify({"device_list":[],"transaction_ID":"1","session_token":"{{session_token}}"});

var requestOptions = {
  method: 'POST',
  headers: myHeaders,
  body: raw,
  redirect: 'follow'
};

fetch("https://www.smartinventory/api/area/requeststate", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));
```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{ \"device_list\" : [], \n  \"transaction_ID\" : \"1\", \n  \"session_token\" : \"{{session_token}}\"\n} ");
Request request = new Request.Builder()
  .url("https://www.smartinventory/api/area/requeststate")
  .method("POST", body)
  .addHeader("content_type", "application/json")
  .addHeader("Authorization", "{{bearer_token}}")
  .build();
Response response = client.newCall(request).execute();
```

```swift
import Foundation
#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

var semaphore = DispatchSemaphore (value: 0)

let parameters = "{ \"device_list\" : [], \n  \"transaction_ID\" : \"1\", \n  \"session_token\" : \"{{session_token}}\"\n} "
let postData = parameters.data(using: .utf8)

var request = URLRequest(url: URL(string: "https://www.smartinventory/api/area/requeststate")!,timeoutInterval: Double.infinity)
request.addValue("application/json", forHTTPHeaderField: "content_type")
request.addValue("{{bearer_token}}", forHTTPHeaderField: "Authorization")

request.httpMethod = "POST"
request.httpBody = postData

let task = URLSession.shared.dataTask(with: request) { data, response, error in 
  guard let data = data else {
    print(String(describing: error))
    semaphore.signal()
    return
  }
  print(String(data: data, encoding: .utf8)!)
  semaphore.signal()
}

task.resume()
semaphore.wait()

```


> Request Body (JSON):

```json
{
  "device_list" : [
    {
      "device_ID" : "MBA-PROD-LSR-001.ATR1"
    },
    {
      "device_ID" : "MBA-PROD-RFID-002.ATR3"
    },
    {
      "device_ID" : "MBA-PROD-DTP-003.ATR4"
    }
  ],
	"transaction_ID" : "1",
	"session_token" : "{{session_token}}"
}
```

> The above command returns JSON structured like this:

```json
{
	"device_status_list" : [
    {
      "device_ID" : "MBA-PROD-LSR-001.ATR1" : ”Online”
    },
    {
      "device_ID" : "MBA-PROD-RFID-002.ATR3" : ”Error”
    },
    {
      "device_ID" : "MBA-PROD-DTP-003.ATR4" : ”Offline”
    }
  ],
	"transaction_ID": "ke9304kfl-0395-01893-934j-91234091304940", 
}
```
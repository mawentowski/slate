```shell
curl --location -g --request POST 'https://sita-{{Env}}-{{AzRegion}}-app-deviceservice.azurewebsites.net/api/v1/location/unsubscribe' \
--header 'content_type: application/json' \
--header 'Authorization: {{bearer_token}}' \
--data-raw '{
	"session_token" : "{{session_token}}"
}'
```

```javascript
var myHeaders = new Headers();
myHeaders.append("content_type", "application/json");
myHeaders.append("Authorization", "{{bearer_token}}");

var raw = JSON.stringify({"session_token":"{{session_token}}"});

var requestOptions = {
  method: 'POST',
  headers: myHeaders,
  body: raw,
  redirect: 'follow'
};

fetch("https://sita-{{Env}}-{{AzRegion}}-app-deviceservice.azurewebsites.net/api/v1/location/unsubscribe", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));

```

```java
OkHttpClient client = new OkHttpClient().newBuilder()
  .build();
MediaType mediaType = MediaType.parse("application/json");
RequestBody body = RequestBody.create(mediaType, "{\n\t\"session_token\" : \"{{session_token}}\"\n}");
Request request = new Request.Builder()
  .url("https://sita-{{Env}}-{{AzRegion}}-app-deviceservice.azurewebsites.net/api/v1/location/unsubscribe")
  .method("POST", body)
  .addHeader("content_type", "application/json")
  .addHeader("Authorization", "{{bearer_token}}")
  .build();
Response response = client.newCall(request).execute();
```

```swift
import Foundation
#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

var semaphore = DispatchSemaphore (value: 0)

let parameters = "{\n\t\"session_token\" : \"{{session_token}}\"\n}"
let postData = parameters.data(using: .utf8)

var request = URLRequest(url: URL(string: "https://sita-{{Env}}-{{AzRegion}}-app-deviceservice.azurewebsites.net/api/v1/location/unsubscribe")!,timeoutInterval: Double.infinity)
request.addValue("application/json", forHTTPHeaderField: "content_type")
request.addValue("{{bearer_token}}", forHTTPHeaderField: "Authorization")

request.httpMethod = "POST"
request.httpBody = postData

let task = URLSession.shared.dataTask(with: request) { data, response, error in 
  guard let data = data else {
    print(String(describing: error))
    semaphore.signal()
    return
  }
  print(String(data: data, encoding: .utf8)!)
  semaphore.signal()
}

task.resume()
semaphore.wait()

```


> Request Body (JSON):

```json
{
  "session_token": "w551UBuls9RmFbtISz6uw551UBuls9RmFbtISz6u", 
}
```